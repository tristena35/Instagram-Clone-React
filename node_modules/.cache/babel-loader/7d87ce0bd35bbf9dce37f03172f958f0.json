{"ast":null,"code":"var _jsxFileName = \"/Users/tristenaguilar/Documents/instagram-clone/src/Post.js\";\nimport React, { useState, useEffect } from 'react';\nimport './Post.css';\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { db } from './firebase';\n\nfunction Post({\n  postId,\n  user,\n  username,\n  caption,\n  imageUrl\n}) {\n  const [comments, setComments] = useState([]);\n  const [comment, setComment] = useState(''); // Use effect working as listener\n\n  useEffect(() => {\n    let unsubscribe;\n\n    if (postId) {\n      unsubscribe = db.collection(\"posts\").doc(postId).collection(\"comments\").orderBy('timestamp', 'desc').onSnapshot(snapshot => {\n        setComments(snapshot.docs.map(doc => doc.data()));\n      });\n    }\n\n    return () => {\n      unsubscribe();\n    };\n  }, [postId]);\n\n  const postComment = event => {\n    event.preventDefault();\n    db.collection(\"posts\").doc(postId).collection(\"comments\").add({\n      text: comment,\n      username: user.displayName,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    });\n    setComment('');\n  }; // Functions go above return\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post_header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: \"post_avatar\",\n    alt: \"Tristenaguilar_\",\n    src: \"/static/images/avatar/1.jpg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, username)), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"post_image\",\n    src: imageUrl,\n    alt: \"Post unavailable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"post_text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 41\n    }\n  }, username), \" \", caption), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post_comments\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, comments.map(comment => /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 29\n    }\n  }, comment.username), \" \", comment.text))), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"post_commentBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"post_input\",\n    type: \"text\",\n    placeholder: \"Add a comment...\",\n    value: comment,\n    onChange: e => setComments(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"post_button\" // Will be disabled if there are no comments\n    ,\n    disabled: !comment,\n    type: \"submit\",\n    onClick: postComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, \"Post\")));\n}\n\nexport default Post;","map":{"version":3,"sources":["/Users/tristenaguilar/Documents/instagram-clone/src/Post.js"],"names":["React","useState","useEffect","Avatar","db","Post","postId","user","username","caption","imageUrl","comments","setComments","comment","setComment","unsubscribe","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","postComment","event","preventDefault","add","text","displayName","timestamp","firebase","firestore","FieldValue","serverTimestamp","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Post.css';\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { db } from './firebase';\n\nfunction Post({ postId, user, username, caption, imageUrl }) {\n\n    const [comments, setComments] = useState([]);\n    const [comment, setComment] = useState('');\n\n    // Use effect working as listener\n    useEffect(() => {\n        let unsubscribe;\n        if (postId){\n            unsubscribe = db\n                .collection(\"posts\")\n                .doc(postId)\n                .collection(\"comments\")\n                .orderBy('timestamp', 'desc')\n                .onSnapshot((snapshot) => {\n                    setComments(snapshot.docs.map((doc) => doc.data()));\n                });\n        }\n        return () => {\n            unsubscribe();\n        };\n    }, [postId]);\n\n    const postComment = (event) => {\n        event.preventDefault();\n        db.collection(\"posts\").doc(postId).collection(\"comments\").add({\n            text: comment,\n            username: user.displayName,\n            timestamp: firebase.firestore.FieldValue.serverTimestamp()\n        });\n        setComment('');\n    }\n\n    // Functions go above return\n    return (\n        <div className = \"post\">\n\n            {/* AVATAR */}\n            <div className = \"post_header\">\n                <Avatar\n                    className = \"post_avatar\"\n                    alt = \"Tristenaguilar_\"\n                    src = \"/static/images/avatar/1.jpg\"\n                />\n                <h3>{username}</h3>\n            </div>\n\n            {/* IMAGE */}\n            <img className = \"post_image\" src = {imageUrl} alt = \"Post unavailable\"/> \n\n            {/* USERNAME */}\n            <h4 className = \"post_text\"><strong>{username}</strong> {caption}</h4>\n\n            {/* COMMENTS */}\n            {\n                <div className = \"post_comments\">\n                    {comments.map((comment) => (\n                        <p>\n                            <strong>{comment.username}</strong> {comment.text}\n                        </p>\n                    ))}\n                </div>\n            }\n\n            {/* MAKE A COMMENT */}\n            <form className = \"post_commentBox\">\n                <input\n                    className = \"post_input\"\n                    type = \"text\"\n                    placeholder = \"Add a comment...\"\n                    value = {comment}\n                    onChange = {(e) => setComments(e.target.value)}\n                />\n                <button\n                    className = \"post_button\"\n                    // Will be disabled if there are no comments\n                    disabled = {!comment}\n                    type = \"submit\"\n                    onClick = {postComment}\n                >Post</button>\n            </form>\n        </div>\n    )\n}\n\nexport default Post\n"]},"metadata":{},"sourceType":"module"}