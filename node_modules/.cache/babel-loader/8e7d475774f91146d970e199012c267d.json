{"ast":null,"code":"import _slicedToArray from\"/Users/tristenaguilar/Documents/instagram-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";// rfce -> shortcut to build structure\nimport React,{useState}from'react';import{Button}from\"@material-ui/core\";import firebase from\"firebase\";import{storage,db}from\"./firebase\";import'./ImageUpload.css';function ImageUpload(_ref){var username=_ref.username;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),image=_useState2[0],setImage=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),progress=_useState4[0],setProgress=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),caption=_useState6[0],setCaption=_useState6[1];var handleChange=function handleChange(e){if(e.target.files[0]){setImage(e.target.files[0]);}};var handleUpload=function handleUpload(){// References the storage in the firebase database, and puts image into folder named images\nvar uploadTask=storage.ref(\"images/\".concat(image.name)).put(image);// The code below is for the progress bar\nuploadTask.on(\"state_changed\",function(snapshot){// progress function ...\nvar progress=Math.round(snapshot.bytesTransferred/snapshot.totalBytes*100);setProgress(progress);},function(error){// Error Function\nconsole.log(error);alert(error.message);},function(){// Complete Function ...\nstorage.ref(\"images\").child(image.name).getDownloadURL().then(function(url){// post image inside db\ndb.collection(\"posts\").add({timestamp:firebase.firestore.FieldValue.serverTimestamp(),caption:caption,imageUrl:url,username:username});// Once function is complete, reset everything\nsetProgress(0);setCaption(\"\");setImage(null);});});};return/*#__PURE__*/React.createElement(\"div\",{className:\"imageupload\"},/*#__PURE__*/React.createElement(\"h2\",null,\"Upload an Image!\"),/*#__PURE__*/React.createElement(\"progress\",{className:\"imageupload_progress\",value:progress,max:\"100\"}),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",placeholder:\"Enter a caption...\",onChange:function onChange(event){return setCaption(event.target.value);},value:caption}),/*#__PURE__*/React.createElement(\"input\",{type:\"file\",onChange:handleChange}),/*#__PURE__*/React.createElement(Button,{onClick:handleUpload},\"Upload\"));}export default ImageUpload;","map":{"version":3,"sources":["/Users/tristenaguilar/Documents/instagram-clone/src/ImageUpload.js"],"names":["React","useState","Button","firebase","storage","db","ImageUpload","username","image","setImage","progress","setProgress","caption","setCaption","handleChange","e","target","files","handleUpload","uploadTask","ref","name","put","on","snapshot","Math","round","bytesTransferred","totalBytes","error","console","log","alert","message","child","getDownloadURL","then","url","collection","add","timestamp","firestore","FieldValue","serverTimestamp","imageUrl","event","value"],"mappings":"sKAAA;AACA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,MAAT,KAAuB,mBAAvB,CACA,MAAOC,CAAAA,QAAP,KAAqB,UAArB,CACA,OAASC,OAAT,CAAkBC,EAAlB,KAA4B,YAA5B,CACA,MAAO,mBAAP,CAEA,QAASC,CAAAA,WAAT,MAAiC,IAAXC,CAAAA,QAAW,MAAXA,QAAW,eAEHN,QAAQ,CAAC,IAAD,CAFL,wCAEtBO,KAFsB,eAEfC,QAFe,8BAGGR,QAAQ,CAAC,CAAD,CAHX,yCAGtBS,QAHsB,eAGZC,WAHY,8BAICV,QAAQ,CAAC,EAAD,CAJT,yCAItBW,OAJsB,eAIbC,UAJa,eAM7B,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,CAAD,CAAO,CACxB,GAAGA,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAH,CAAsB,CAClBR,QAAQ,CAACM,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAD,CAAR,CACH,CACJ,CAJD,CAMA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACvB;AACA,GAAMC,CAAAA,UAAU,CAAGf,OAAO,CAACgB,GAAR,kBAAsBZ,KAAK,CAACa,IAA5B,GAAoCC,GAApC,CAAwCd,KAAxC,CAAnB,CAEA;AACAW,UAAU,CAACI,EAAX,CACI,eADJ,CAEI,SAACC,QAAD,CAAc,CACV;AACA,GAAMd,CAAAA,QAAQ,CAAGe,IAAI,CAACC,KAAL,CACZF,QAAQ,CAACG,gBAAT,CAA4BH,QAAQ,CAACI,UAAtC,CAAoD,GADvC,CAAjB,CAGAjB,WAAW,CAACD,QAAD,CAAX,CACH,CARL,CASI,SAACmB,KAAD,CAAW,CACP;AACAC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACAG,KAAK,CAACH,KAAK,CAACI,OAAP,CAAL,CACH,CAbL,CAcI,UAAM,CACF;AACA7B,OAAO,CACFgB,GADL,CACS,QADT,EAEKc,KAFL,CAEW1B,KAAK,CAACa,IAFjB,EAGKc,cAHL,GAIKC,IAJL,CAIU,SAAAC,GAAG,CAAI,CACT;AACAhC,EAAE,CAACiC,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2B,CACvBC,SAAS,CAAErC,QAAQ,CAACsC,SAAT,CAAmBC,UAAnB,CAA8BC,eAA9B,EADY,CAEvB/B,OAAO,CAAEA,OAFc,CAGvBgC,QAAQ,CAAEP,GAHa,CAIvB9B,QAAQ,CAAEA,QAJa,CAA3B,EAMA;AACAI,WAAW,CAAC,CAAD,CAAX,CACAE,UAAU,CAAC,EAAD,CAAV,CACAJ,QAAQ,CAAC,IAAD,CAAR,CACH,CAhBL,EAiBH,CAjCL,EAmCH,CAxCD,CA0CA,mBACI,2BAAK,SAAS,CAAG,aAAjB,eACI,iDADJ,cAEI,gCAAU,SAAS,CAAG,sBAAtB,CAA6C,KAAK,CAAIC,QAAtD,CAAgE,GAAG,CAAG,KAAtE,EAFJ,cAGI,6BAAO,IAAI,CAAG,MAAd,CAAqB,WAAW,CAAG,oBAAnC,CAAwD,QAAQ,CAAI,kBAAAmC,KAAK,QAAIhC,CAAAA,UAAU,CAACgC,KAAK,CAAC7B,MAAN,CAAa8B,KAAd,CAAd,EAAzE,CAA6G,KAAK,CAAGlC,OAArH,EAHJ,cAII,6BAAO,IAAI,CAAG,MAAd,CAAqB,QAAQ,CAAIE,YAAjC,EAJJ,cAKI,oBAAC,MAAD,EAAQ,OAAO,CAAII,YAAnB,WALJ,CADJ,CAWH,CAED,cAAeZ,CAAAA,WAAf","sourcesContent":["// rfce -> shortcut to build structure\nimport React, { useState } from 'react';\nimport { Button } from \"@material-ui/core\";\nimport firebase from \"firebase\";\nimport { storage, db } from \"./firebase\";\nimport './ImageUpload.css';\n\nfunction ImageUpload({username}) {\n\n    const [image, setImage] = useState(null);\n    const [progress, setProgress] = useState(0);\n    const [caption, setCaption] = useState('');\n\n    const handleChange = (e) => {\n        if(e.target.files[0]) {\n            setImage(e.target.files[0]);\n        }\n    };\n\n    const handleUpload = () => {\n        // References the storage in the firebase database, and puts image into folder named images\n        const uploadTask = storage.ref(`images/${image.name}`).put(image);\n\n        // The code below is for the progress bar\n        uploadTask.on(\n            \"state_changed\",\n            (snapshot) => {\n                // progress function ...\n                const progress = Math.round(\n                    (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n                );\n                setProgress(progress);\n            },\n            (error) => {\n                // Error Function\n                console.log(error);\n                alert(error.message);\n            },\n            () => {\n                // Complete Function ...\n                storage\n                    .ref(\"images\")\n                    .child(image.name)\n                    .getDownloadURL()\n                    .then(url => {\n                        // post image inside db\n                        db.collection(\"posts\").add({\n                            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n                            caption: caption,\n                            imageUrl: url,\n                            username: username\n                        });\n                        // Once function is complete, reset everything\n                        setProgress(0);\n                        setCaption(\"\");\n                        setImage(null);\n                    });\n            }\n        );\n    };\n\n    return (\n        <div className = \"imageupload\">\n            <h2>Upload an Image!</h2>\n            <progress className = \"imageupload_progress\" value = {progress} max = \"100\" />\n            <input type = \"text\" placeholder = \"Enter a caption...\" onChange = {event => setCaption(event.target.value)} value ={caption} />\n            <input type = \"file\" onChange = {handleChange} />\n            <Button onClick = {handleUpload}>\n                Upload\n            </Button>\n        </div>\n    )\n}\n\nexport default ImageUpload\n"]},"metadata":{},"sourceType":"module"}