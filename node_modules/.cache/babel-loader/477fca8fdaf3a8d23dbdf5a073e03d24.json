{"ast":null,"code":"var _jsxFileName = \"/Users/tristenaguilar/Documents/instagram-clone/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Post from './Post';\nimport { db, auth } from './firebase';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport { Button, Input } from '@material-ui/core';\nimport ImageUpload from './ImageUpload';\nimport InstagramEmbed from 'react-instagram-embed';\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [modalStyle] = React.useState(getModalStyle);\n  const [posts, setPosts] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [openSignIn, setOpenSignIn] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const [user, setUser] = useState(null); // UseEffect -> runs a piece of code based on a specific condition\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(authUser => {\n      if (authUser) {\n        // User has logged in\n        console.log(authUser);\n        setUser(authUser);\n      } else {\n        // User has logged out\n        setUser(null);\n      }\n    });\n    return () => {\n      // perform some cleanup actions\n      unsubscribe();\n    };\n  }, [user, username]);\n  /* \n    Under, based on changes in the database, this method will be called\n  */\n\n  useEffect(() => {\n    // Every time the database is updated, snapshot will get the changes\n    // desc -> descending order\n    db.collection('posts').orderBy('timestamp', 'desc').onSnapshot(snapshot => {\n      setPosts(snapshot.docs.map(doc => ({\n        id: doc.id,\n        post: doc.data()\n      })));\n    });\n  }, []);\n\n  const signUp = event => {\n    event.preventDefault();\n    auth.createUserWithEmailAndPassword(email, password).then(authUser => {\n      return authUser.user.updateProfile({\n        displayName: username\n      });\n    }).catch(error => alert(error.message));\n    setOpen(false);\n  };\n\n  const signIn = event => {\n    event.preventDefault();\n    auth.signInWithEmailAndPassword(email, password).catch(error => alert(error.message));\n    setOpenSignIn(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    open: open,\n    onClose: () => setOpen(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: modalStyle,\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"app_signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"center\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"app_headerImage\",\n    src: \"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\",\n    alt: \"Instagram Header Logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"email\",\n    type: \"text\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"username\",\n    type: \"text\",\n    value: username,\n    onChange: e => setUsername(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"password\",\n    type: \"password\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    onClick: signUp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 15\n    }\n  }, \"Sign Up\")))), /*#__PURE__*/React.createElement(Modal, {\n    open: openSignIn,\n    onClose: () => setOpenSignIn(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: modalStyle,\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"app_signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"center\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"app_headerImage\",\n    src: \"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\",\n    alt: \"Instagram Header Logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"email\",\n    type: \"text\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"password\",\n    type: \"password\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    onClick: signIn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 15\n    }\n  }, \"Sign In\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app_header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"app_headerImage\",\n    src: \"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\",\n    alt: \"Instagram Header Logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }\n  }), user ? /*#__PURE__*/React.createElement(Button, {\n    onClick: () => auth.signOut(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 11\n    }\n  }, \"Logout\") : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app_loginContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setOpenSignIn(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }\n  }, \"Sign In\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setOpen(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }\n  }, \"Sign Up\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app_posts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }\n  }, posts.map(({\n    id,\n    post\n  }) => /*#__PURE__*/React.createElement(Post, {\n    key: id,\n    username: post.username,\n    caption: post.caption,\n    imageUrl: post.imageUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(InstagramEmbed, {\n    url: \"https://www.instagram.com/p/B6qmM7sFaSaEesr7puUILjg-z6p8IgtpaSyRz00/\",\n    maxWidth: 320,\n    hideCaption: false,\n    containerTagName: \"div\",\n    protocol: \"\",\n    injectScript: true,\n    onLoading: () => {},\n    onSuccess: () => {},\n    onAfterRender: () => {},\n    onFailure: () => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }\n  }), (user === null || user === void 0 ? void 0 : user.displayName) ? /*#__PURE__*/React.createElement(ImageUpload, {\n    username: user.displayName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 9\n    }\n  }, \"Login to upload\"));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/tristenaguilar/Documents/instagram-clone/src/App.js"],"names":["React","useState","useEffect","Post","db","auth","makeStyles","Modal","Button","Input","ImageUpload","InstagramEmbed","getModalStyle","top","left","transform","useStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","App","classes","modalStyle","posts","setPosts","open","setOpen","openSignIn","setOpenSignIn","username","setUsername","password","setPassword","email","setEmail","user","setUser","unsubscribe","onAuthStateChanged","authUser","console","log","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","post","data","signUp","event","preventDefault","createUserWithEmailAndPassword","then","updateProfile","displayName","catch","error","alert","message","signIn","signInWithEmailAndPassword","e","target","value","signOut","caption","imageUrl"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Post from './Post';\nimport { db, auth } from './firebase';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport { Button, Input } from '@material-ui/core';\nimport ImageUpload from './ImageUpload';\nimport InstagramEmbed from 'react-instagram-embed';\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [modalStyle] = React.useState(getModalStyle);\n  const [posts, setPosts] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [openSignIn, setOpenSignIn] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const [user, setUser] = useState(null);\n\n  // UseEffect -> runs a piece of code based on a specific condition\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((authUser) => {\n      if(authUser) {\n        // User has logged in\n        console.log(authUser);\n        setUser(authUser);\n      }\n      else {\n        // User has logged out\n        setUser(null);\n      }\n    })\n    return () => {\n      // perform some cleanup actions\n      unsubscribe();\n    }\n  }, [user, username]);\n\n  /* \n    Under, based on changes in the database, this method will be called\n  */\n  useEffect(() => {\n    // Every time the database is updated, snapshot will get the changes\n    // desc -> descending order\n    db.collection('posts').orderBy('timestamp', 'desc').onSnapshot(snapshot => {\n      setPosts(snapshot.docs.map(doc => ({\n        id: doc.id, \n        post: doc.data()\n      })));\n    })\n  }, []);\n\n  const signUp = (event) => {\n    event.preventDefault();\n    auth\n    .createUserWithEmailAndPassword(email, password)\n    .then((authUser) => {\n      return authUser.user.updateProfile({\n        displayName: username\n      })\n    })\n    .catch((error) => alert(error.message));\n\n    setOpen(false);\n  }\n\n  const signIn = (event) => {\n    event.preventDefault();\n\n    auth\n      .signInWithEmailAndPassword(email, password)\n      .catch((error) => alert(error.message))\n\n    setOpenSignIn(false);\n  }\n\n  return (\n    <div className=\"app\">\n\n      {/* \n        A modal is like a pop up where information can be entered; SIGN UP\n      */}\n\n      <Modal\n        open={open}\n        onClose={() => setOpen(false)}\n      >\n        <div style={modalStyle} className={classes.paper}>\n          <form className = \"app_signup\">\n            <center>\n              <img\n                className = \"app_headerImage\"\n                src = \"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\"\n                alt = \"Instagram Header Logo\"\n              />\n            </center>\n            <Input\n                placeholder = \"email\"\n                type = \"text\"\n                value = {email}\n                onChange = {(e) => setEmail(e.target.value)} \n              />\n              <Input\n                placeholder = \"username\"\n                type = \"text\"\n                value = {username}\n                onChange = {(e) => setUsername(e.target.value)} \n              />\n              <Input\n                placeholder = \"password\"\n                type = \"password\"\n                value = {password}\n                onChange = {(e) => setPassword(e.target.value)} \n              />\n              <Button type = \"submit\" onClick = {signUp}>Sign Up</Button>\n          </form>\n        </div>\n      </Modal>\n\n      {/* \n        A modal is like a pop up where information can be entered; SIGN IN\n      */}\n\n      <Modal\n        open={openSignIn}\n        onClose={() => setOpenSignIn(false)}\n      >\n        <div style={modalStyle} className={classes.paper}>\n          <form className = \"app_signup\">\n            <center>\n              <img\n                className = \"app_headerImage\"\n                src = \"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\"\n                alt = \"Instagram Header Logo\"\n              />\n            </center>\n            <Input\n                placeholder = \"email\"\n                type = \"text\"\n                value = {email}\n                onChange = {(e) => setEmail(e.target.value)} \n              />\n              <Input\n                placeholder = \"password\"\n                type = \"password\"\n                value = {password}\n                onChange = {(e) => setPassword(e.target.value)} \n              />\n              <Button type = \"submit\" onClick = {signIn}>Sign In</Button>\n          </form>\n        </div>\n      </Modal>\n\n      {/* ---- HEADER ---- */}\n      <div className = \"app_header\">\n        <img\n          className = \"app_headerImage\"\n          src = \"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\"\n          alt = \"Instagram Header Logo\"\n        />\n        {/*\n          Code below works as an if or, if the user is logged in, then should sign them out, otherwise log in.\n        */}\n        {user ? (\n          <Button onClick = {() => auth.signOut()}>Logout</Button>\n        ): (\n          <div className = \"app_loginContainer\">\n            <Button onClick = {() => setOpenSignIn(true)}>Sign In</Button>\n            <Button onClick = {() => setOpen(true)}>Sign Up</Button>\n          </div>\n        )}\n      </div>\n\n      {/* ---- POSTS ---- */}\n      <div className = \"app_posts\">\n        {/*\n          - Under, we populate the posts in real time with the names they were given on firebase\n          - Using a key is very efficient since when changes are made it will only update the \n          one post instead of refreshing them all\n        */}\n        {\n          posts.map(({id, post}) => (\n            <Post key = {id} username = {post.username} caption = {post.caption} imageUrl = {post.imageUrl}></Post>\n          ))\n        }\n      </div>\n      <InstagramEmbed\n        url='https://www.instagram.com/p/B6qmM7sFaSaEesr7puUILjg-z6p8IgtpaSyRz00/'\n        maxWidth={320}\n        hideCaption={false}\n        containerTagName='div'\n        protocol=''\n        injectScript\n        onLoading={() => {}}\n        onSuccess={() => {}}\n        onAfterRender={() => {}}\n        onFailure={() => {}}\n      />\n\n      {/* The question mark next to user says dont freak out an break if */}\n\n      {user?.displayName ? (\n        <ImageUpload username = {user.displayName} ></ImageUpload>\n      ): (\n        <h3>Login to upload</h3>\n      )}\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}