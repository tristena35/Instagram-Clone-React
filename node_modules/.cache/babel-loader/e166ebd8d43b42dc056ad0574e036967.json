{"ast":null,"code":"var _jsxFileName = \"/Users/tristenaguilar/Documents/instagram-clone/src/ImageUpload.js\";\n// rfce -> shortcut to build structure\nimport React, { useState } from 'react';\nimport { Button } from \"@material-ui/core\";\nimport firebase from \"firebase\";\nimport { storage, db } from \"./firebase\";\nimport './ImageUpload.css';\n\nfunction ImageUpload({\n  username\n}) {\n  const [image, setImage] = useState(null); // const [url, setUrl] = useState(\"\");\n\n  const [progress, setProgress] = useState(0);\n  const [caption, setCaption] = useState('');\n\n  const handleChange = e => {\n    if (e.target.files[0]) {\n      setImage(e.target.files[0]);\n    }\n  };\n\n  const handleUpload = () => {\n    // References the storage in the firebase database, and puts image into folder named images\n    const uploadTask = storage.ref(`images/${image.name}`).put(image); // The code below is for the progress bar\n\n    uploadTask.on(\"state_changed\", snapshot => {\n      // progress function ...\n      const progress = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n      setProgress(progress);\n    }, error => {\n      // Error Function\n      console.log(error);\n      alert(error.message);\n    }, () => {\n      // Complete Function ...\n      storage.ref(\"images\").child(image.name).getDownloadURL().then(url => {\n        // post image inside db\n        db.collection(\"posts\").add({\n          timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n          caption: caption,\n          imageUrl: url,\n          username: username\n        }); // Once function is complete, reset everything\n\n        setProgress(0);\n        setCaption(\"\");\n        setImage(null);\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"imageupload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, \"Upload an Image!\"), /*#__PURE__*/React.createElement(\"progress\", {\n    value: progress,\n    max: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter a caption...\",\n    onChange: event => setCaption(event.target.value),\n    value: caption,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, \"Upload\"));\n}\n\nexport default ImageUpload;","map":{"version":3,"sources":["/Users/tristenaguilar/Documents/instagram-clone/src/ImageUpload.js"],"names":["React","useState","Button","firebase","storage","db","ImageUpload","username","image","setImage","progress","setProgress","caption","setCaption","handleChange","e","target","files","handleUpload","uploadTask","ref","name","put","on","snapshot","Math","round","bytesTransferred","totalBytes","error","console","log","alert","message","child","getDownloadURL","then","url","collection","add","timestamp","firestore","FieldValue","serverTimestamp","imageUrl","event","value"],"mappings":"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","sourcesContent":["// rfce -> shortcut to build structure\nimport React, { useState } from 'react';\nimport { Button } from \"@material-ui/core\";\nimport firebase from \"firebase\";\nimport { storage, db } from \"./firebase\";\nimport './ImageUpload.css';\n\nfunction ImageUpload({username}) {\n\n    const [image, setImage] = useState(null);\n    // const [url, setUrl] = useState(\"\");\n    const [progress, setProgress] = useState(0);\n    const [caption, setCaption] = useState('');\n\n    const handleChange = (e) => {\n        if(e.target.files[0]) {\n            setImage(e.target.files[0]);\n        }\n    };\n\n    const handleUpload = () => {\n        // References the storage in the firebase database, and puts image into folder named images\n        const uploadTask = storage.ref(`images/${image.name}`).put(image);\n\n        // The code below is for the progress bar\n        uploadTask.on(\n            \"state_changed\",\n            (snapshot) => {\n                // progress function ...\n                const progress = Math.round(\n                    (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n                );\n                setProgress(progress);\n            },\n            (error) => {\n                // Error Function\n                console.log(error);\n                alert(error.message);\n            },\n            () => {\n                // Complete Function ...\n                storage\n                    .ref(\"images\")\n                    .child(image.name)\n                    .getDownloadURL()\n                    .then(url => {\n                        // post image inside db\n                        db.collection(\"posts\").add({\n                            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n                            caption: caption,\n                            imageUrl: url,\n                            username: username\n                        });\n                        // Once function is complete, reset everything\n                        setProgress(0);\n                        setCaption(\"\");\n                        setImage(null);\n                    });\n            }\n        );\n    };\n\n    return (\n        <div className = \"imageupload\">\n            <h2>Upload an Image!</h2>\n            <progress value = {progress} max = \"100\" />\n            <input type = \"text\" placeholder = \"Enter a caption...\" onChange = {event => setCaption(event.target.value)} value ={caption} />\n            <input type = \"file\" onChange = {handleChange} />\n            <Button onClick = {handleUpload}>\n                Upload\n            </Button>\n        </div>\n    )\n}\n\nexport default ImageUpload\n"]},"metadata":{},"sourceType":"module"}