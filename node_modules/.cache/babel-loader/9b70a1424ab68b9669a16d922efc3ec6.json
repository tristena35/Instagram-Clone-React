{"ast":null,"code":"var _jsxFileName = \"/Users/tristenaguilar/Documents/instagram-clone/src/Post.js\";\nimport React, { useState, useEffect } from 'react';\nimport './Post.css';\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { db } from './firebase';\n\nfunction Post({\n  postId,\n  username,\n  caption,\n  imageUrl\n}) {\n  const [comments, setComments] = useState([]);\n  const [comment, setComment] = useState(''); // Use effect working as listener\n\n  useEffect(() => {\n    let unsubscribe;\n\n    if (postId) {\n      unsubscribe = db.collection(\"posts\").doc(postId).collection(\"comments\").onSnapshot(snapshot => {\n        setComments(snapshot.docs.map(doc => doc.data()));\n      });\n    }\n\n    return () => {\n      unsubscribe();\n    };\n  }, [postId]);\n\n  const postComment = event => {}; // Functions go above return\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post_header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: \"post_avatar\",\n    alt: \"Tristenaguilar_\",\n    src: \"/static/images/avatar/1.jpg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, username)), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"post_image\",\n    src: imageUrl,\n    alt: \"Post unavailable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"post_text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 41\n    }\n  }, username), \" \", caption), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post_comments\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, comments.map(comment => /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 29\n    }\n  }, comment.username), \" \", comment.text))), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"post_commentBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"post_input\",\n    type: \"text\",\n    placeholder: \"Add a comment...\",\n    value: comment,\n    onChange: e => setComments(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"post_button\" // Will be disabled if there are no comments\n    ,\n    disabled: !comment,\n    type: \"submit\",\n    onClick: postComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, \"Post\")));\n}\n\nexport default Post;","map":{"version":3,"sources":["/Users/tristenaguilar/Documents/instagram-clone/src/Post.js"],"names":["React","useState","useEffect","Avatar","db","Post","postId","username","caption","imageUrl","comments","setComments","comment","setComment","unsubscribe","collection","doc","onSnapshot","snapshot","docs","map","data","postComment","event","text","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Post.css';\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { db } from './firebase';\n\nfunction Post({ postId, username, caption, imageUrl }) {\n\n    const [comments, setComments] = useState([]);\n    const [comment, setComment] = useState('');\n\n    // Use effect working as listener\n    useEffect(() => {\n        let unsubscribe;\n        if (postId){\n            unsubscribe = db\n                .collection(\"posts\")\n                .doc(postId)\n                .collection(\"comments\")\n                .onSnapshot((snapshot) => {\n                    setComments(snapshot.docs.map((doc) => doc.data()));\n                });\n        }\n        return () => {\n            unsubscribe();\n        };\n    }, [postId]);\n\n    const postComment = (event) => {\n\n    }\n\n    // Functions go above return\n    return (\n        <div className = \"post\">\n\n            {/* AVATAR */}\n            <div className = \"post_header\">\n                <Avatar\n                    className = \"post_avatar\"\n                    alt = \"Tristenaguilar_\"\n                    src = \"/static/images/avatar/1.jpg\"\n                />\n                <h3>{username}</h3>\n            </div>\n\n            {/* IMAGE */}\n            <img className = \"post_image\" src = {imageUrl} alt = \"Post unavailable\"/> \n\n            {/* USERNAME */}\n            <h4 className = \"post_text\"><strong>{username}</strong> {caption}</h4>\n\n            {/* COMMENTS */}\n            {\n                <div className = \"post_comments\">\n                    {comments.map((comment) => (\n                        <p>\n                            <strong>{comment.username}</strong> {comment.text}\n                        </p>\n                    ))}\n                </div>\n            }\n\n            {/* MAKE A COMMENT */}\n            <form className = \"post_commentBox\">\n                <input\n                    className = \"post_input\"\n                    type = \"text\"\n                    placeholder = \"Add a comment...\"\n                    value = {comment}\n                    onChange = {(e) => setComments(e.target.value)}\n                />\n                <button\n                    className = \"post_button\"\n                    // Will be disabled if there are no comments\n                    disabled = {!comment}\n                    type = \"submit\"\n                    onClick = {postComment}\n                >Post</button>\n            </form>\n        </div>\n    )\n}\n\nexport default Post\n"]},"metadata":{},"sourceType":"module"}